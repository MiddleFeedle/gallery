{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\edit.js\";\nimport React from 'react';\nimport './home.css';\nimport { Redirect } from 'react-router-dom';\nimport IndexedDbRepository from '../db/connection';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colchange = e => {\n      this.uploadingPicture.collection = e.target.value;\n    };\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.renderRedirect = () => {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.state = {\n      name: null,\n      desc: null,\n      image: false,\n      img: [],\n      tags: null,\n      collections: []\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    this.handlePicUpload = this.handlePicUpload.bind(this);\n    this.colchange = this.colchange.bind(this);\n    var db, dbtest;\n    var uploadingPicture;\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    this.dbtest.findById(parseInt(this.props.match.params.PictureID)).then(picture => {\n      this.setState({\n        name: picture.name\n      });\n      this.setState({\n        desc: picture.desc\n      });\n      this.setState({\n        tags: picture.tags\n      });\n      this.setState({\n        collection: picture.collection\n      });\n    });\n\n    if (localStorage.getItem('collections') === null) {\n      var colls = [null];\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    } else {\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    }\n  }\n\n  uploadpicture() {\n    if (this.state.name === null) {\n      alert(\"Введите название картинки!\");\n    } else {\n      this.uploadingPicture.name = this.state.name;\n      this.uploadingPicture.desc = this.state.desc;\n      this.uploadingPicture.date = new Date();\n\n      if (this.state.tags !== null && this.state.tags !== \"\") {\n        this.state.tags = this.state.tags.replace(/\\s+/g, ' ').trim();\n\n        if (this.state.tags !== \"\") {\n          this.uploadingPicture.tags = this.state.tags.split(\" \");\n        }\n      }\n\n      let file = this.state.img;\n      var reader = new FileReader();\n      reader.readAsBinaryString(file);\n\n      reader.onload = e => {\n        let bits = e.target.result;\n        this.uploadingPicture.value = bits;\n        this.dbtest.save(this.uploadingPicture).then(function (value) {\n          alert(\"Изображение было добавлено!\");\n          window.location.href = \"/addpicture\";\n        });\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 1\n      }\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'data:image/' + this.state.image.type + ';base64,' + btoa(this.state.image.value),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 3\n      }\n    }, \"Title\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n      value: this.state.image.name,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }\n    }, \"Text\", /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"desc\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      value: this.state.image.desc,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.editpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 1\n      }\n    }, \" \\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C! \")), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"tags\",\n      placeholder: \"\\u0422\\u0435\\u0433\\u0438 (\\u0447\\u0435\\u0440\\u0435\\u0437 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B \\u0431\\u0435\\u0437 #) \\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u0442\\u0435\\u0433\\u0430 - \\u0442\\u0440\\u0438 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\",\n      value: this.state.tags,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.colchange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 1\n      }\n    }, this.state.collections.map(coll => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, coll);\n    })))));\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/edit.js"],"names":["React","Redirect","IndexedDbRepository","Edit","Component","constructor","props","colchange","e","uploadingPicture","collection","target","value","handleUserInput","name","setState","renderRedirect","state","desc","image","img","tags","collections","uploadpicture","bind","handlePicUpload","db","dbtest","componentDidMount","findById","parseInt","match","params","PictureID","then","picture","localStorage","getItem","colls","setItem","JSON","stringify","parse","alert","date","Date","replace","trim","split","file","reader","FileReader","readAsBinaryString","onload","bits","result","save","window","location","href","render","type","btoa","editpicture","map","coll"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,mBAAP,MAAgC,kBAAhC;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAEA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,SApBmB,GAoBNC,CAAD,IACZ;AACE,WAAKC,gBAAL,CAAsBC,UAAtB,GAAmCF,CAAC,CAACG,MAAF,CAASC,KAA5C;AACD,KAvBkB;;AAAA,SA0BrBC,eA1BqB,GA0BFL,CAAD,IAAO;AACvB,YAAMM,IAAI,GAAGN,CAAC,CAACG,MAAF,CAASG,IAAtB;AACA,YAAMF,KAAK,GAAGJ,CAAC,CAACG,MAAF,CAASC,KAAvB;AACA,WAAKG,QAAL,CAAc;AAAC,SAACD,IAAD,GAAQF;AAAT,OAAd;AACD,KA9BoB;;AAAA,SA4DjBI,cA5DiB,GA4DA,MAAM;AACvB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KA9DoB;;AAEjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,IADK;AAEXI,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,KAAK,EAAE,KAHI;AAIXC,MAAAA,GAAG,EAAE,EAJM;AAKXC,MAAAA,IAAI,EAAE,IALK;AAMXC,MAAAA,WAAW,EAAE;AANF,KAAb;AASA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKjB,SAAL,GAAiB,KAAKA,SAAL,CAAeiB,IAAf,CAAoB,IAApB,CAAjB;AAEA,QAAIE,EAAJ,EAAQC,MAAR;AACA,QAAIlB,gBAAJ;AACD;;AAmBDmB,EAAAA,iBAAiB,GAAG;AAEpB,SAAKD,MAAL,GAAc,IAAIzB,mBAAJ,CAAyB,SAAzB,CAAd;AACA,SAAKyB,MAAL,CAAYE,QAAZ,CAAsBC,QAAQ,CAAC,KAAKxB,KAAL,CAAWyB,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzB,CAA9B,EAAoEC,IAApE,CAA0EC,OAAO,IAAI;AACnF,WAAKpB,QAAL,CAAe;AAAED,QAAAA,IAAI,EAAEqB,OAAO,CAACrB;AAAhB,OAAf;AACA,WAAKC,QAAL,CAAe;AAAEG,QAAAA,IAAI,EAAEiB,OAAO,CAACjB;AAAhB,OAAf;AACA,WAAKH,QAAL,CAAe;AAAEM,QAAAA,IAAI,EAAEc,OAAO,CAACd;AAAhB,OAAf;AACA,WAAKN,QAAL,CAAe;AAAEL,QAAAA,UAAU,EAAEyB,OAAO,CAACzB;AAAtB,OAAf;AAEH,KANC;;AASA,QAAG0B,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAwC,IAA3C,EACA;AACE,UAAIC,KAAK,GAAG,CAAC,IAAD,CAAZ;AACAF,MAAAA,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAApC;AACA,WAAKvB,QAAL,CAAc;AAACO,QAAAA,WAAW,EAAEkB,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX;AAAd,OAAd;AACD,KALD,MAOA;AACE,WAAKtB,QAAL,CAAc;AAACO,QAAAA,WAAW,EAAEkB,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX;AAAd,OAAd;AACD;AACE;;AAOLd,EAAAA,aAAa,GACb;AAEI,QAAG,KAAKN,KAAL,CAAWH,IAAX,KAAoB,IAAvB,EAA6B;AAAE6B,MAAAA,KAAK,CAAC,4BAAD,CAAL;AAAqC,KAApE,MACI;AAEJ,WAAKlC,gBAAL,CAAsBK,IAAtB,GAA6B,KAAKG,KAAL,CAAWH,IAAxC;AACA,WAAKL,gBAAL,CAAsBS,IAAtB,GAA6B,KAAKD,KAAL,CAAWC,IAAxC;AACA,WAAKT,gBAAL,CAAsBmC,IAAtB,GAA6B,IAAIC,IAAJ,EAA7B;;AAEA,UAAG,KAAK5B,KAAL,CAAWI,IAAX,KAAoB,IAApB,IAA4B,KAAKJ,KAAL,CAAWI,IAAX,KAAoB,EAAnD,EACA;AACE,aAAKJ,KAAL,CAAWI,IAAX,GAAkB,KAAKJ,KAAL,CAAWI,IAAX,CAAgByB,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,EAAqCC,IAArC,EAAlB;;AACA,YAAG,KAAK9B,KAAL,CAAWI,IAAX,KAAoB,EAAvB,EACA;AACA,eAAKZ,gBAAL,CAAsBY,IAAtB,GAA6B,KAAKJ,KAAL,CAAWI,IAAX,CAAgB2B,KAAhB,CAAsB,GAAtB,CAA7B;AACD;AACA;;AAED,UAAIC,IAAI,GAAG,KAAKhC,KAAL,CAAWG,GAAtB;AAEA,UAAI8B,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEAD,MAAAA,MAAM,CAACE,kBAAP,CAA0BH,IAA1B;;AAEAC,MAAAA,MAAM,CAACG,MAAP,GAAiB7C,CAAD,IAAO;AAErB,YAAI8C,IAAI,GAAG9C,CAAC,CAACG,MAAF,CAAS4C,MAApB;AACA,aAAK9C,gBAAL,CAAsBG,KAAtB,GAA8B0C,IAA9B;AAEA,aAAK3B,MAAL,CAAY6B,IAAZ,CAAkB,KAAK/C,gBAAvB,EAA0CyB,IAA1C,CAA+C,UAAStB,KAAT,EAAgB;AAC7D+B,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACAc,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACG,SAHL;AAKD,OAVD;AAWD;AACF;;AAICC,EAAAA,MAAM,GAAG;AAET,wBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAFA,eAIA;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAG,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,GAAG,EAAE,gBAAgB,KAAK3C,KAAL,CAAWE,KAAX,CAAiB0C,IAAjC,GAAuC,UAAvC,GAAoDC,IAAI,CAAC,KAAK7C,KAAL,CAAWE,KAAX,CAAiBP,KAAlB,CAAlE;AAA4F,MAAA,GAAG,EAAC,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAqD,MAAA,IAAI,EAAC,MAA1D;AACE,MAAA,WAAW,EAAC,mGADd;AAEE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWE,KAAX,CAAiBL,IAF1B;AAGE,MAAA,QAAQ,EAAE,KAAKD,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAPF,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,eAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,MAAM,EAAC,OAAjC;AAAyC,MAAA,SAAS,EAAC,sBAAnD;AAA0E,MAAA,IAAI,EAAC,MAA/E;AACE,MAAA,WAAW,EAAC,kDADd;AAEE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWE,KAAX,CAAiBD,IAF1B;AAGE,MAAA,QAAQ,EAAE,KAAKL,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAfA,eAsBA;AAAQ,MAAA,OAAO,EAAE,KAAKkD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAtBA,CAJA,eA8BE;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,MAAM,EAAC,OAAjC;AAAyC,MAAA,SAAS,EAAC,sBAAnD;AAA0E,MAAA,IAAI,EAAC,MAA/E;AACA,MAAA,WAAW,EAAC,gTADZ;AAEA,MAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWI,IAFlB;AAGA,MAAA,QAAQ,EAAE,KAAKR,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,eAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,QAAQ,EAAI,KAAKN,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKU,KAAL,CAAWK,WAAX,CAAuB0C,GAAvB,CAA4BC,IAAD,IAAU;AAC3B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,IAAT,CADF;AAER,KAHF,CAFJ,CADA,CAFA,CAnCA,CADE;AAwDD;;AArKD;;AAyKA,eAAe9D,IAAf","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Edit extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      desc: null,\r\n      image: false,\r\n      img: [],\r\n      tags: null,\r\n      collections: []\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n    this.handlePicUpload = this.handlePicUpload.bind(this);\r\n    this.colchange = this.colchange.bind(this);\r\n\r\n    var db, dbtest;\r\n    var uploadingPicture;\r\n  }\r\n\r\n\r\n  colchange = (e) =>\r\n  {\r\n    this.uploadingPicture.collection = e.target.value;\r\n  }\r\n\r\n\r\nhandleUserInput = (e) => {\r\n  const name = e.target.name;\r\n  const value = e.target.value;\r\n  this.setState({[name]: value});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n  this.dbtest = new IndexedDbRepository( 'Storage' );\r\n  this.dbtest.findById( parseInt(this.props.match.params.PictureID) ).then( picture => {\r\n    this.setState( { name: picture.name });\r\n    this.setState( { desc: picture.desc });\r\n    this.setState( { tags: picture.tags });\r\n    this.setState( { collection: picture.collection });\r\n\r\n}\r\n);\r\n\r\n  if(localStorage.getItem('collections') === null)\r\n  {\r\n    var colls = [null];\r\n    localStorage.setItem(\"collections\", JSON.stringify(colls));\r\n    this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n  }\r\n  else\r\n  {\r\n    this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n  }\r\n    }\r\n\r\n    renderRedirect = () => {\r\n    return <Redirect to='/' />\r\n}\r\n\r\n\r\nuploadpicture()\r\n{\r\n\r\n    if(this.state.name === null) { alert(\"Введите название картинки!\");}\r\n    else{\r\n\r\n    this.uploadingPicture.name = this.state.name;\r\n    this.uploadingPicture.desc = this.state.desc;\r\n    this.uploadingPicture.date = new Date();\r\n\r\n    if(this.state.tags !== null && this.state.tags !== \"\")\r\n    {\r\n      this.state.tags = this.state.tags.replace(/\\s+/g, ' ').trim();\r\n      if(this.state.tags !== \"\")\r\n      {\r\n      this.uploadingPicture.tags = this.state.tags.split(\" \");\r\n    }\r\n    }\r\n\r\n    let file = this.state.img;\r\n\r\n    var reader = new FileReader();\r\n\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = (e) => {\r\n\r\n      let bits = e.target.result;\r\n      this.uploadingPicture.value = bits;\r\n\r\n      this.dbtest.save( this.uploadingPicture ).then(function(value) {\r\n        alert(\"Изображение было добавлено!\");\r\n        window.location.href = \"/addpicture\";\r\n          });\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n  return(\r\n<div>\r\n\r\n<h1>Редактировать</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n  <img src={'data:image/' + this.state.image.type +';base64,' + btoa(this.state.image.value)} alt='' />\r\n\r\n  </div>\r\n\r\n  <div>\r\n  Title\r\n  <input type=\"text\" required className=\"form-control\" name=\"name\"\r\n    placeholder=\"Название картинки\"\r\n    value={this.state.image.name}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<br />\r\n<div>\r\n  Text\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"desc\"\r\n    placeholder=\"Описание\"\r\n    value={this.state.image.desc}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<button onClick={this.editpicture}> Редактировать! </button>\r\n\r\n</div>\r\n\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"tags\"\r\n  placeholder=\"Теги (через пробел без #) Минимальная длина тега - три символа\"\r\n  value={this.state.tags}\r\n  onChange={this.handleUserInput}  />\r\n\r\n<div>\r\n\r\n<div>\r\n<select onChange = {this.colchange}>\r\n  {\r\n    this.state.collections.map((coll) => {\r\n              return(\r\n                <option>{coll}</option>\r\n    )})\r\n  }\r\n\r\n</select>\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}