{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\addpicture.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass AddPicture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePicUpload = e => {\n      this.uploadingPicture = {\n        name: null,\n        format: null,\n        width: null,\n        height: null,\n        size: null,\n        type: null,\n        date: null,\n        desc: \"test\",\n        tags: null,\n        value: null\n      };\n      const value = e.target.value;\n      var file = e.target.files[0];\n      this.state.img = file;\n\n      if (file.type.split('/')[0] != 'image') {\n        this.state.image = false;\n        alert(\"Неправильный формат файла!!!\");\n      } else {\n        this.setState({\n          preview: URL.createObjectURL(file)\n        });\n        this.state.image = true;\n        this.uploadingPicture.type = file.type.split('/')[1];\n        var sizeInMB = (file.size / (1024 * 1024)).toFixed(2);\n        this.uploadingPicture.size = sizeInMB;\n\n        var _URL = window.URL || window.webkitURL;\n\n        var img;\n        img = new Image();\n\n        var objectUrl = _URL.createObjectURL(file);\n\n        img.src = objectUrl;\n\n        img.onload = () => {\n          this.uploadingPicture.width = img.width;\n          this.uploadingPicture.height = img.height;\n\n          if (img.height > img.width) {\n            this.uploadingPicture.format = \"portrait\";\n          } else if (img.width > img.height) {\n            this.uploadingPicture.format = \"album\";\n          } else {\n            this.uploadingPicture.format = \"square\";\n          }\n\n          _URL.revokeObjectURL(objectUrl);\n\n          console.log(this.uploadingPicture);\n        };\n      }\n    };\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: null,\n      desc: null,\n      image: false,\n      img: [],\n      preview: \"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\",\n      tagsnumber: 0\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    this.handlePicUpload = this.handlePicUpload.bind(this);\n    var db, dbtest;\n    var uploadingPicture;\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    console.log(this.db);\n  }\n\n  uploadpicture() {\n    if (this.state.image === true) {\n      if (this.state.name === null) {\n        alert(\"Введите название картинки!\");\n      } else {\n        this.uploadingPicture.name = this.state.name;\n        this.uploadingPicture.desc = this.state.desc;\n        this.uploadingPicture.date = new Date();\n\n        if (this.state.tags !== null && this.state.tags !== \"\") {\n          this.uploadingPicture.tags = this.state.tags.split(space);\n        }\n\n        let file = this.state.img;\n        var reader = new FileReader();\n        reader.readAsBinaryString(file);\n\n        reader.onload = e => {\n          let bits = e.target.result;\n          this.uploadingPicture.value = bits;\n          this.dbtest.save(this.uploadingPicture);\n        };\n      }\n    } else {\n      alert(\"Загрузите, пожалуйста, картинку!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 1\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"picture\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.handlePicUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 3\n      }\n    }, \"Title\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n      value: this.state.name,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 1\n      }\n    }, \"Text\", /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"desc\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      value: this.state.desc,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 1\n      }\n    }, \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443! \")), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"tags\",\n      placeholder: \"\\u0422\\u0435\\u0433\\u0438 (\\u0447\\u0435\\u0440\\u0435\\u0437 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B \\u0431\\u0435\\u0437 #)\",\n      value: this.state.tags,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 1\n      }\n    }));\n  }\n\n}\n\nexport default AddPicture;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/addpicture.js"],"names":["React","IndexedDbRepository","AddPicture","Component","constructor","props","handlePicUpload","e","uploadingPicture","name","format","width","height","size","type","date","desc","tags","value","target","file","files","state","img","split","image","alert","setState","preview","URL","createObjectURL","sizeInMB","toFixed","_URL","window","webkitURL","Image","objectUrl","src","onload","revokeObjectURL","console","log","handleUserInput","tagsnumber","uploadpicture","bind","db","dbtest","componentDidMount","Date","space","reader","FileReader","readAsBinaryString","bits","result","save","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass AddPicture extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      desc: null,\r\n      image: false,\r\n      img: [],\r\n      preview: \"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\",\r\n      tagsnumber: 0,\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n    this.handlePicUpload = this.handlePicUpload.bind(this);\r\n\r\n    var db, dbtest;\r\n    var uploadingPicture;\r\n  }\r\n\r\n\r\n  handlePicUpload = (e) => {\r\n\r\n    this.uploadingPicture =\r\n{\r\n    name: null,\r\n    format: null,\r\n    width: null,\r\n    height: null,\r\n    size: null,\r\n    type: null,\r\n    date: null,\r\n    desc: \"test\",\r\n    tags: null,\r\n    value: null,\r\n};\r\n\r\n\r\n  const value = e.target.value;\r\n  var file = e.target.files[0];\r\n\r\n  this.state.img = file;\r\n\r\n  if (file.type.split('/')[0] != 'image' )\r\n  {\r\n    this.state.image = false;\r\n    alert(\"Неправильный формат файла!!!\");\r\n  }\r\n\r\n  else {\r\n\r\n  this.setState({\r\n  preview: URL.createObjectURL(file)\r\n  });\r\n\r\n  this.state.image = true;\r\n  this.uploadingPicture.type = file.type.split('/')[1];\r\n\r\n  var sizeInMB = (file.size / (1024*1024)).toFixed(2);\r\n  this.uploadingPicture.size = sizeInMB;\r\n\r\n\r\n  var _URL = window.URL || window.webkitURL;\r\n\r\n  var img;\r\n  img = new Image();\r\n  var objectUrl = _URL.createObjectURL(file);\r\n  img.src = objectUrl;\r\n\r\n\r\n\r\n  img.onload = () => {\r\n\r\n      this.uploadingPicture.width = img.width;\r\n      this.uploadingPicture.height = img.height;\r\n\r\n      if(img.height > img.width)\r\n      {\r\n        this.uploadingPicture.format = \"portrait\";\r\n      }\r\n      else if(img.width > img.height)\r\n      {\r\n        this.uploadingPicture.format = \"album\";\r\n      }\r\n      else {this.uploadingPicture.format = \"square\"}\r\n      _URL.revokeObjectURL(objectUrl);\r\n      console.log(this.uploadingPicture);\r\n  };\r\n}\r\n}\r\n\r\nhandleUserInput = (e) => {\r\n  const name = e.target.name;\r\n  const value = e.target.value;\r\n  this.setState({[name]: value});\r\n}\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n    console.log(this.db);\r\n    }\r\n\r\n\r\n\r\n    uploadpicture()\r\n    {\r\n\r\n      if(this.state.image === true) {\r\n        if(this.state.name === null) { alert(\"Введите название картинки!\");}\r\n        else{\r\n\r\n        this.uploadingPicture.name = this.state.name;\r\n        this.uploadingPicture.desc = this.state.desc;\r\n        this.uploadingPicture.date = new Date();\r\n\r\n        if(this.state.tags !== null && this.state.tags !== \"\")\r\n        {\r\n          this.uploadingPicture.tags = this.state.tags.split(space);\r\n\r\n        }\r\n\r\n\t\t  \tlet file = this.state.img;\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\t\treader.readAsBinaryString(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tlet bits = e.target.result;\r\n          this.uploadingPicture.value = bits;\r\n\r\n\r\n          this.dbtest.save( this.uploadingPicture );\r\n\r\n\t\t\t\t}\r\n      }\r\n}\r\n\r\nelse {alert(\"Загрузите, пожалуйста, картинку!\");}\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Добавить картинку</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n    <label for=\"picture\">\r\n    <img src={this.state.preview}/>\r\n    </label>\r\n\r\n<input id=\"picture\" type=\"file\" accept=\"image/*\" onChange={this.handlePicUpload} />\r\n  </div>\r\n\r\n  <div>\r\n  Title\r\n  <input type=\"text\" required className=\"form-control\" name=\"name\"\r\n    placeholder=\"Название картинки\"\r\n    value={this.state.name}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<br />\r\n<div>\r\n  Text\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"desc\"\r\n    placeholder=\"Описание\"\r\n    value={this.state.desc}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<button onClick={this.uploadpicture}> Загрузить картинку! </button>\r\n\r\n</div>\r\n\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"tags\"\r\n  placeholder=\"Теги (через пробел без #)\"\r\n  value={this.state.tags}\r\n  onChange={this.handleUserInput}  />\r\n\r\n<div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default AddPicture;\r\n"]},"metadata":{},"sourceType":"module"}