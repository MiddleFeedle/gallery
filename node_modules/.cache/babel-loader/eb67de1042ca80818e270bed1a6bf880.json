{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\addpicture.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass AddPicture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: false,\n      urls: [],\n      img: null,\n      test: \"aaa\"\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    this.handlePicUpload = this.handlePicUpload.bind(this);\n    var db, dbtest;\n    var uploadingPicture = {\n      name: null,\n      format: null,\n      width: null,\n      height: null,\n      size: null,\n      type: null,\n      date: null,\n      desc: \"test\",\n      tags: \"котики тест проверка\",\n      value: null\n    };\n  }\n\n  handlePicUpload(e) {\n    alert(this.uploadingPicture.desc);\n    const value = e.target.value;\n    var file = e.target.files[0];\n\n    if (file.type.split('/')[0] != 'image') {\n      this.state.image = false;\n      alert(\"Неправильный формат файла!!!\");\n    } else {\n      this.state.image = true;\n      this.uploadingPicture.type = file.type.split('/')[1];\n      var sizeInMB = (file.size / (1024 * 1024)).toFixed(2);\n      this.uploadingPicture.size = sizeInMB;\n\n      var _URL = window.URL || window.webkitURL;\n\n      var img;\n      img = new Image();\n\n      var objectUrl = _URL.createObjectURL(file);\n\n      img.src = objectUrl;\n\n      img.onload = function () {\n        this.uploadingPicture.width = this.width;\n        this.uploadingPicture.height = this.height;\n\n        if (this.height > this.width) {\n          this.uploadingPicture.format = \"portrait\";\n        } else if (this.width > this.height) {\n          this.uploadingPicture.format = \"album\";\n        } else {\n          this.uploadingPicture.format = \"square\";\n        }\n\n        _URL.revokeObjectURL(objectUrl);\n\n        console.log(this.uploadingPicture);\n        alert(\"aa\");\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    console.log(this.db);\n  }\n\n  uploadpicture() {\n    //  let uploadingPicture.date = new Date();\n    alert(this.dbtest);\n    let file = this.state.img;\n    alert(file);\n    var reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = e => {\n      let bits = e.target.result; // uploadingPicture.value = bits;\n\n      let ob = bits;\n      this.dbtest.save({\n        value: bits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 1\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"picture\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.handlePicUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }\n    }, \"  \\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043B\\u0430\\u0437\\u0435\\u0440\\u044B\"));\n  }\n\n}\n\nexport default AddPicture;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/addpicture.js"],"names":["React","IndexedDbRepository","AddPicture","Component","constructor","props","state","image","urls","img","test","uploadpicture","bind","handlePicUpload","db","dbtest","uploadingPicture","name","format","width","height","size","type","date","desc","tags","value","e","alert","target","file","files","split","sizeInMB","toFixed","_URL","window","URL","webkitURL","Image","objectUrl","createObjectURL","src","onload","revokeObjectURL","console","log","componentDidMount","reader","FileReader","readAsBinaryString","bits","result","ob","save","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass AddPicture extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: false,\r\n      urls: [],\r\n      img: null,\r\n      test: \"aaa\"\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n    this.handlePicUpload = this.handlePicUpload.bind(this);\r\n\r\n    var db, dbtest;\r\n\r\n    var uploadingPicture =\r\n{\r\n    name: null,\r\n    format: null,\r\n    width: null,\r\n    height: null,\r\n    size: null,\r\n    type: null,\r\n    date: null,\r\n    desc: \"test\",\r\n    tags: \"котики тест проверка\",\r\n    value: null\r\n};\r\n\r\n  }\r\n\r\n  handlePicUpload(e) {\r\n    alert(this.uploadingPicture.desc);\r\n\r\n  const value = e.target.value;\r\n  var file = e.target.files[0];\r\n\r\n  if (file.type.split('/')[0] != 'image' )\r\n  {\r\n    this.state.image = false;\r\n    alert(\"Неправильный формат файла!!!\");\r\n  }\r\n\r\n  else {\r\n\r\n    this.state.image = true;\r\n  this.uploadingPicture.type = file.type.split('/')[1];\r\n\r\n  var sizeInMB = (file.size / (1024*1024)).toFixed(2);\r\n  this.uploadingPicture.size = sizeInMB;\r\n\r\n\r\n  var _URL = window.URL || window.webkitURL;\r\n\r\n  var img;\r\n  img = new Image();\r\n  var objectUrl = _URL.createObjectURL(file);\r\n  img.src = objectUrl;\r\n\r\n  img.onload = function () {\r\n      this.uploadingPicture.width = this.width;\r\n      this.uploadingPicture.height = this.height;\r\n\r\n      if(this.height > this.width)\r\n      {\r\n        this.uploadingPicture.format = \"portrait\";\r\n      }\r\n      else if(this.width > this.height)\r\n      {\r\n        this.uploadingPicture.format = \"album\";\r\n      }\r\n      else {this.uploadingPicture.format = \"square\"}\r\n      _URL.revokeObjectURL(objectUrl);\r\n      console.log(this.uploadingPicture);\r\n      alert(\"aa\");\r\n  };\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n    console.log(this.db);\r\n    }\r\n\r\n\r\n    uploadpicture()\r\n    {\r\n    //  let uploadingPicture.date = new Date();\r\n\r\n    alert(this.dbtest);\r\n\r\n\t\t  \tlet file = this.state.img;\r\n        alert(file);\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\t\treader.readAsBinaryString(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tlet bits = e.target.result;\r\n        // uploadingPicture.value = bits;\r\n\r\n\r\n\t\t\t\t\tlet ob = bits;\r\n          this.dbtest.save( { value: bits } );\r\n\r\n\t\t\t\t}\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Добавить картинку</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n    <label for=\"picture\">\r\n    <img src=\"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\"/>\r\n    </label>\r\n\r\n<input id=\"picture\" type=\"file\" accept=\"image/*\" onChange={this.handlePicUpload} />\r\n  </div>\r\n\r\n</div>\r\n\r\n<div>\r\n</div>\r\n\r\n<button onClick={this.uploadpicture}>  Активировать лазеры\r\n\r\n</button>\r\n\r\n\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default AddPicture;\r\n"]},"metadata":{},"sourceType":"module"}