{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\collections.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass Collections extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const value = e.target.value;\n      this.setState({\n        colname: value\n      });\n    };\n\n    this.addcoll = () => {\n      if (this.state.colname !== \"\" && this.state.colname !== \"null\") {\n        var temp;\n        temp = JSON.parse(localStorage.getItem(\"collections\"));\n        console.log(temp);\n        temp.push(this.state.colname);\n        console.log(temp);\n        localStorage.setItem(\"collections\", JSON.stringify(temp));\n      }\n    };\n\n    this.state = {\n      pics: [],\n      readypics: [],\n      colname: null,\n      collections: []\n    };\n\n    var _temp, dbtest;\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('collections') === null) {\n      var colls = [null];\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    } else {\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    }\n\n    let statepics = [];\n    this.dbtest = new IndexedDbRepository('Storage');\n    this.dbtest.findAll().then(pictures => this.setState({\n      pics: pictures\n    })); // this.dbtest.findByIndex(\"tags\", \"котики\").then( pictures => this.setState( { pics: pictures } ) );\n  }\n\n  render() {\n    const myData = this.state;\n\n    if (!Array.isArray(this.state.pics)) {\n      this.state.pics = [this.state.pics];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }\n    }, \"\\u0427\\u0443\\u0434\\u043E-\\u0433\\u0430\\u043B\\u0435\\u0440\\u0435\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      name: \"colname\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u043E\\u043B\\u0435\\u043A\\u0446\\u0438\\u0438\",\n      value: this.state.colname,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addcoll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 3\n      }\n    }, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u0435\\u043A\\u0446\\u0438\\u044E! \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }\n    }), this.state.pics.map(pics => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: '/' + pics.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: 'data:image/' + pics.type + ';base64,' + btoa(pics.value),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 3\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 3\n        }\n      }, pics.name), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 3\n        }\n      }, pics.desc));\n    })));\n  }\n\n}\n\nexport default Collections;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/collections.js"],"names":["React","IndexedDbRepository","Collections","Component","constructor","props","handleUserInput","e","value","target","setState","colname","addcoll","state","temp","JSON","parse","localStorage","getItem","console","log","push","setItem","stringify","pics","readypics","collections","dbtest","componentDidMount","colls","statepics","findAll","then","pictures","render","myData","Array","isArray","map","id","type","btoa","name","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Collections extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        pics: [],\r\n        readypics: [],\r\n        colname: null,\r\n        collections: []\r\n    };\r\n    var temp, dbtest;\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    if(localStorage.getItem('collections') === null)\r\n    {\r\n      var colls = [null];\r\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\r\n      this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n    }\r\n    else\r\n    {\r\n      this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n    }\r\n\r\n    let statepics = [];\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n    this.dbtest.findAll().then( pictures => this.setState( { pics: pictures } ) );\r\n\r\n    // this.dbtest.findByIndex(\"tags\", \"котики\").then( pictures => this.setState( { pics: pictures } ) );\r\n    }\r\n\r\n\r\n    handleUserInput = (e) => {\r\n      const value = e.target.value;\r\n      this.setState({colname: value});\r\n    }\r\n\r\n    addcoll = () =>\r\n    {\r\n      if(this.state.colname !== \"\" && this.state.colname !== \"null\")\r\n      {\r\n        var temp;\r\n        temp = JSON.parse(localStorage.getItem(\"collections\"));\r\n        console.log(temp);\r\n        temp.push(this.state.colname);\r\n        console.log(temp);\r\n        localStorage.setItem(\"collections\", JSON.stringify(temp));\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const myData = this.state;\r\n\r\n    if(!Array.isArray(this.state.pics))\r\n    {\r\n      this.state.pics  = [this.state.pics];\r\n    }\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Чудо-галерея</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n<input type=\"text\" required className=\"form-control\" name=\"colname\"\r\n  placeholder=\"Введите название новой колекции\"\r\n  value={this.state.colname}\r\n  onChange={this.handleUserInput}  />\r\n\r\n  <button onClick={this.addcoll}> Добавить колекцию! </button>\r\n\r\n<br/>\r\n\r\n\r\n\r\n{\r\nthis.state.pics.map((pics) => {\r\n\r\n          return(\r\n\r\n  <div class = 'container'>\r\n  <a href={'/' + pics.id}>\r\n  <img src={'data:image/' + pics.type +';base64,' + btoa(pics.value)} alt='' />\r\n  </a>\r\n  <span class='title'>{pics.name}</span>\r\n  <span class='text'>{pics.desc}</span>\r\n  </div>\r\n)})\r\n}\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Collections;\r\n"]},"metadata":{},"sourceType":"module"}