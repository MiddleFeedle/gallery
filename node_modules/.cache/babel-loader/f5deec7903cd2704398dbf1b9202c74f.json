{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\collections.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass Collections extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const value = e.target.value;\n      this.setState({\n        colname: value\n      });\n    };\n\n    this.addcoll = () => {\n      if (this.state.colname !== \"\" && this.state.colname !== \"null\") {\n        var temp;\n        temp = JSON.parse(localStorage.getItem(\"collections\"));\n\n        if (temp.includes(this.state.colname)) {\n          alert(\"Колекция с таким именем уже существует!\");\n        } else {\n          temp.push(this.state.colname);\n          localStorage.setItem(\"collections\", JSON.stringify(temp));\n          this.setState({\n            collections: JSON.parse(localStorage.getItem(\"collections\"))\n          });\n        }\n      }\n    };\n\n    this.state = {\n      pics: [],\n      readypics: [],\n      colname: null,\n      collections: []\n    };\n\n    var _temp, dbtest;\n  }\n\n  componentDidMount() {\n    let statepics = [];\n    this.dbtest = new IndexedDbRepository('Storage');\n\n    if (localStorage.getItem('collections') === null) {\n      var colls = [null];\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    } else {\n      this.setState({\n        collections: JSON.parse(localStorage.getItem(\"collections\"))\n      });\n    }\n\n    var temp = JSON.parse(localStorage.getItem(\"collections\"));\n\n    for (var i = 1, len = temp.length; i < len; i++) {\n      this.dbtest.findByIndex(\"collection\", temp[i]).then(pictures => this.setState({\n        pics: this.state.pics.concat([pictures])\n      }));\n    } // this.dbtest.findByIndex(\"tags\", \"котики\").then( pictures => this.setState( { pics: pictures } ) );\n\n  }\n\n  render() {\n    console.log(this.state.pics);\n    const myData = this.state;\n\n    if (!Array.isArray(this.state.pics)) {\n      this.state.pics = [this.state.pics];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }\n    }, \"\\u041A\\u043E\\u043B\\u0435\\u043A\\u0446\\u0438\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      name: \"colname\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u043E\\u043B\\u0435\\u043A\\u0446\\u0438\\u0438\",\n      value: this.state.colname,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addcoll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 3\n      }\n    }, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u0435\\u043A\\u0446\\u0438\\u044E! \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 1\n      }\n    }), this.state.pics.map(image => {\n      for (var i = 0; i < 2; i++) {\n        console.log(image[i]);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          class: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: '/' + image[i].id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: 'data:image/' + image[i].type + ';base64,' + btoa(image[i].value),\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 3\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          class: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 3\n          }\n        }, image[i].name), /*#__PURE__*/React.createElement(\"span\", {\n          class: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 3\n          }\n        }, image[i].desc));\n      }\n    })));\n  }\n\n}\n\nexport default Collections;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/collections.js"],"names":["React","IndexedDbRepository","Collections","Component","constructor","props","handleUserInput","e","value","target","setState","colname","addcoll","state","temp","JSON","parse","localStorage","getItem","includes","alert","push","setItem","stringify","collections","pics","readypics","dbtest","componentDidMount","statepics","colls","i","len","length","findByIndex","then","pictures","concat","render","console","log","myData","Array","isArray","map","image","id","type","btoa","name","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Collections extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        pics: [],\r\n        readypics: [],\r\n        colname: null,\r\n        collections: []\r\n    };\r\n    var temp, dbtest;\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    let statepics = [];\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n\r\n    if(localStorage.getItem('collections') === null)\r\n    {\r\n      var colls = [null];\r\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\r\n      this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n    }\r\n    else\r\n    {\r\n      this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n    }\r\n\r\n    var temp = JSON.parse(localStorage.getItem(\"collections\"));\r\n\r\n    for (var i = 1, len = temp.length; i < len; i++) {\r\n\r\n        this.dbtest.findByIndex(\"collection\", temp[i]).then(pictures =>\r\n\r\n          this.setState( { pics: this.state.pics.concat([pictures])}));\r\n\r\n  }\r\n    // this.dbtest.findByIndex(\"tags\", \"котики\").then( pictures => this.setState( { pics: pictures } ) );\r\n    }\r\n\r\n\r\n    handleUserInput = (e) => {\r\n      const value = e.target.value;\r\n      this.setState({colname: value});\r\n    }\r\n\r\n    addcoll = () =>\r\n    {\r\n      if(this.state.colname !== \"\" && this.state.colname !== \"null\")\r\n      {\r\n        var temp;\r\n        temp = JSON.parse(localStorage.getItem(\"collections\"));\r\n\r\n        if(temp.includes(this.state.colname))\r\n        {\r\n          alert(\"Колекция с таким именем уже существует!\");\r\n        }\r\n        else\r\n        {\r\n          temp.push(this.state.colname);\r\n          localStorage.setItem(\"collections\", JSON.stringify(temp));\r\n          this.setState({collections: JSON.parse(localStorage.getItem(\"collections\")) });\r\n        }\r\n\r\n\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    console.log(this.state.pics);\r\n\r\n\r\n    const myData = this.state;\r\n\r\n    if(!Array.isArray(this.state.pics))\r\n    {\r\n      this.state.pics  = [this.state.pics];\r\n    }\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Колекции</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n<input type=\"text\" required className=\"form-control\" name=\"colname\"\r\n  placeholder=\"Введите название новой колекции\"\r\n  value={this.state.colname}\r\n  onChange={this.handleUserInput}  />\r\n\r\n  <button onClick={this.addcoll}> Добавить колекцию! </button>\r\n\r\n<br/>\r\n\r\n{\r\nthis.state.pics.map((image) => {\r\n  for(var i = 0; i<2; i++) {\r\n    console.log(image[i]);\r\n\r\n          return(\r\n\r\n  <div class = 'container'>\r\n  <a href={'/' + image[i].id}>\r\n  <img src={'data:image/' + image[i].type +';base64,' + btoa(image[i].value)} alt='' />\r\n  </a>\r\n  <span class='title'>{image[i].name}</span>\r\n  <span class='text'>{image[i].desc}</span>\r\n  </div>\r\n)}})\r\n}\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Collections;\r\n"]},"metadata":{},"sourceType":"module"}