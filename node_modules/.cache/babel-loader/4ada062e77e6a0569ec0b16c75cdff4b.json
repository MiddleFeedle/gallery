{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\addpicture.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass AddPicture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePicUpload = e => {\n      const value = e.target.value;\n      this.setState({\n        img: e.target.files[0]\n      });\n    };\n\n    this.state = {\n      name: null,\n      desc: null,\n      urls: [],\n      img: null\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    this.handlePicUpload = this.handlePicUpload.bind(this);\n    var db, dbtest;\n    let uploadingPicture = {\n      name: null,\n      format: null,\n      width: null,\n      height: null,\n      size: null,\n      type: null,\n      date: null,\n      desc: \"test\",\n      tags: \"котики тест проверка\",\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    console.log(this.db);\n  }\n\n  uploadpicture() {\n    //  let uploadingPicture.date = new Date();\n    alert(this.dbtest);\n    let file = this.state.img;\n    alert(file);\n    var reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = e => {\n      let bits = e.target.result; // uploadingPicture.value = bits;\n\n      let ob = bits;\n      this.dbtest.save({\n        value: bits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"picture\",\n      type: \"file\",\n      accept: \"image/*\",\n      onchange: this.hadnleimgupload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }\n    }, \"  \\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043B\\u0430\\u0437\\u0435\\u0440\\u044B\"));\n  }\n\n}\n\nexport default AddPicture;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/addpicture.js"],"names":["React","IndexedDbRepository","AddPicture","Component","constructor","props","handlePicUpload","e","value","target","setState","img","files","state","name","desc","urls","uploadpicture","bind","db","dbtest","uploadingPicture","format","width","height","size","type","date","tags","componentDidMount","console","log","alert","file","reader","FileReader","readAsBinaryString","onload","bits","result","ob","save","render","hadnleimgupload"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass AddPicture extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      desc: null,\r\n      urls: [],\r\n      img: null,\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n    this.handlePicUpload = this.handlePicUpload.bind(this);\r\n\r\n    var db, dbtest;\r\n\r\n    let uploadingPicture =\r\n{\r\n\r\n    name: null,\r\n    format: null,\r\n    width: null,\r\n    height: null,\r\n    size: null,\r\n    type: null,\r\n    date: null,\r\n    desc: \"test\",\r\n    tags: \"котики тест проверка\",\r\n    value: null\r\n}\r\n\r\n  }\r\n\r\n\r\n\r\n  handlePicUpload = (e) => {\r\n  const value = e.target.value;\r\n  this.setState({img: e.target.files[0]});\r\n}\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n    console.log(this.db);\r\n    }\r\n\r\n\r\n    uploadpicture()\r\n    {\r\n    //  let uploadingPicture.date = new Date();\r\n\r\n    alert(this.dbtest);\r\n\r\n\t\t  \tlet file = this.state.img;\r\n        alert(file);\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\t\treader.readAsBinaryString(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tlet bits = e.target.result;\r\n        // uploadingPicture.value = bits;\r\n\r\n\r\n\t\t\t\t\tlet ob = bits;\r\n          this.dbtest.save( { value: bits } );\r\n\r\n\t\t\t\t}\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Добавить картинку</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n    <label for=\"picture\">\r\n    <img src=\"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\"/>\r\n    </label>\r\n\r\n<input id=\"picture\" type=\"file\" accept=\"image/*\" onchange={this.hadnleimgupload} />\r\n  </div>\r\n\r\n</div>\r\n\r\n<div>\r\n</div>\r\n\r\n<button onClick={this.uploadpicture}>  Активировать лазеры\r\n\r\n</button>\r\n\r\n\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default AddPicture;\r\n"]},"metadata":{},"sourceType":"module"}