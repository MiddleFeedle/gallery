{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\stats.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass Stats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clear = () => {\n      this.dbtest.clear().then(result => {\n        alert(\"Все изображения были удалены\");\n        let colls = [null];\n        localStorage.setItem(\"collections\", JSON.stringify(colls));\n        window.location = \"/stats\";\n      });\n    };\n\n    this.state = {\n      max: 0,\n      current: 0,\n      percent: 0,\n      totalammount: 0\n    };\n  }\n\n  componentDidMount() {\n    navigator.storage.estimate().then(estimate => {\n      this.setState({\n        max: estimate.quota / 1000000000\n      });\n      this.setState({\n        current: estimate.usage / 1000000000\n      });\n      console.log(this.state.max);\n      console.log(this.state.current);\n    });\n    this.dbtest = new IndexedDbRepository('Storage');\n    this.dbtest.countALL().then(number => this.setState({\n      totalammount: number\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }\n    }, \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0430\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputfield\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }\n    }, \" \\u0412\\u0441\\u0435\\u0433\\u043E \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \", this.state.max, \" GB. (\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u0442 \\u043E\\u0442 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430)\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }\n    }, \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \", this.state.current, \" GB.\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }, \"\\u0412 \\u0431\\u0430\\u0437\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0441\\u044F \", this.state.totalammount, \" \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043E\\u043A.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"searchbutton\",\n      onClick: this.clear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }\n    }, \" \\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435! \")));\n  }\n\n}\n\nexport default Stats;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/stats.js"],"names":["React","IndexedDbRepository","Stats","Component","constructor","props","clear","dbtest","then","result","alert","colls","localStorage","setItem","JSON","stringify","window","location","state","max","current","percent","totalammount","componentDidMount","navigator","storage","estimate","setState","quota","usage","console","log","countALL","number","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,mBAAP,MAAgC,kBAAhC;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAEA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BjBC,KA3BiB,GA2BT,MACR;AACE,WAAKC,MAAL,CAAYD,KAAZ,GAAoBE,IAApB,CAA0BC,MAAM,IAAI;AAAEC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACtC,YAAIC,KAAK,GAAG,CAAC,IAAD,CAAZ;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAApC;AACAK,QAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACA,OAJA;AAKD,KAlCgB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAKDC,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAlB,GAA6BlB,IAA7B,CAAmCkB,QAAD,IAAc;AAC9C,WAAKC,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAEO,QAAQ,CAACE,KAAT,GAAe;AAArB,OAAd;AACA,WAAKD,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAEM,QAAQ,CAACG,KAAT,GAAe;AAAzB,OAAd;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,GAAvB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,OAAvB;AAED,KANC;AAQF,SAAKb,MAAL,GAAc,IAAIN,mBAAJ,CAAyB,SAAzB,CAAd;AACA,SAAKM,MAAL,CAAYyB,QAAZ,GAAuBxB,IAAvB,CAA6ByB,MAAM,IAAI,KAAKN,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAEW;AAAf,KAAd,CAAvC;AACG;;AAaHC,EAAAA,MAAM,GAAG;AACT,wBAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAAqB,KAAKhB,KAAL,CAAWC,GAAhC,oHAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAAyB,KAAKD,KAAL,CAAWE,OAApC,SAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAAqB,KAAKF,KAAL,CAAWI,YAAhC,uDAJA,eAMA;AAAQ,MAAA,SAAS,EAAG,cAApB;AAAmC,MAAA,OAAO,EAAE,KAAKhB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHANA,CAJA,CAFE;AAkBD;;AA1DD;;AA8DA,eAAeJ,KAAf","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Stats extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      max: 0,\r\n      current: 0,\r\n      percent: 0,\r\n      totalammount: 0\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    navigator.storage.estimate().then((estimate) => {\r\n      this.setState({max: estimate.quota/1000000000});\r\n      this.setState({current: estimate.usage/1000000000});\r\n    console.log(this.state.max);\r\n    console.log(this.state.current);\r\n\r\n  });\r\n\r\n  this.dbtest = new IndexedDbRepository( 'Storage' );\r\n  this.dbtest.countALL().then( number => this.setState({totalammount: number}) );\r\n    }\r\n\r\n    clear = () =>\r\n    {\r\n      this.dbtest.clear().then( result => { alert(\"Все изображения были удалены\");\r\n      let colls = [null];\r\n      localStorage.setItem(\"collections\", JSON.stringify(colls));\r\n      window.location = \"/stats\";\r\n     } );\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Статистика хранилища</h1>\r\n<br/>\r\n<div className = \"inputfield\">\r\n\r\n<h1> Всего доступно {this.state.max} GB. (зависит от браузера)</h1>\r\n<h1>Сейчас используется {this.state.current} GB.</h1>\r\n<h1>В базе хранится {this.state.totalammount} картинок.</h1>\r\n\r\n<button className = \"searchbutton\" onClick={this.clear}> Очистить хранилище! </button>\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}