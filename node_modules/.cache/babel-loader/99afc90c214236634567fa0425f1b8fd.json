{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\home.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePicUpload = e => {\n      const value = e.target.value;\n      this.setState({\n        img: e.target.files[0]\n      });\n    };\n\n    this.state = {\n      postinfo: [],\n      urls: [],\n      img: null\n    };\n  }\n\n  componentDidMount() {\n    db = new IndexedDbRepository('id');\n    console.log(db);\n  }\n\n  uploadpicture() {\n    alert(\"a\");\n    uploadingPicture.date = new Date();\n    let file = this.state.img;\n    var reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = function (e) {\n      //alert(e.target.result);\n      let bits = e.target.result;\n      uploadingPicture.value = bits;\n      let ob = uploadingPicture;\n      let trans = db.transaction(['Pictures'], 'readwrite');\n      let addReq = trans.objectStore('Pictures').add(ob);\n\n      addReq.onerror = function (e) {\n        console.log('error storing data');\n        console.error(e);\n      };\n\n      trans.oncomplete = function (e) {\n        console.log('data stored');\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }\n    }, \"Simple gallery pure css\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      id: \"articleimg\",\n      class: \"\",\n      accept: \".png,.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }\n    }, \"  \\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043B\\u0430\\u0437\\u0435\\u0440\\u044B\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/home.js"],"names":["React","IndexedDbRepository","Home","Component","constructor","props","handlePicUpload","e","value","target","setState","img","files","state","postinfo","urls","componentDidMount","db","console","log","uploadpicture","alert","uploadingPicture","date","Date","file","reader","FileReader","readAsBinaryString","onload","bits","result","ob","trans","transaction","addReq","objectStore","add","onerror","error","oncomplete","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,OAAOC,mBAAP,MAAgC,kBAAhC;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAEA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,eAXmB,GAWAC,CAAD,IAAO;AACzB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AAEA,WAAKE,QAAL,CAAc;AAACC,QAAAA,GAAG,EAAEJ,CAAC,CAACE,MAAF,CAASG,KAAT,CAAe,CAAf;AAAN,OAAd;AAED,KAhBoB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXJ,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAYDK,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,EAAE,GAAG,IAAIhB,mBAAJ,CAAyB,IAAzB,CAAL;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEC;;AAGDG,EAAAA,aAAa,GACb;AACEC,IAAAA,KAAK,CAAC,GAAD,CAAL;AAGAC,IAAAA,gBAAgB,CAACC,IAAjB,GAAwB,IAAIC,IAAJ,EAAxB;AAEH,QAAIC,IAAI,GAAG,KAAKZ,KAAL,CAAWF,GAAtB;AAGC,QAAIe,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEAD,IAAAA,MAAM,CAACE,kBAAP,CAA0BH,IAA1B;;AAEAC,IAAAA,MAAM,CAACG,MAAP,GAAgB,UAAStB,CAAT,EAAY;AAC3B;AACA,UAAIuB,IAAI,GAAGvB,CAAC,CAACE,MAAF,CAASsB,MAApB;AACGT,MAAAA,gBAAgB,CAACd,KAAjB,GAAyBsB,IAAzB;AAGH,UAAIE,EAAE,GAAGV,gBAAT;AAEA,UAAIW,KAAK,GAAGhB,EAAE,CAACiB,WAAH,CAAe,CAAC,UAAD,CAAf,EAA6B,WAA7B,CAAZ;AACA,UAAIC,MAAM,GAAGF,KAAK,CAACG,WAAN,CAAkB,UAAlB,EAA8BC,GAA9B,CAAkCL,EAAlC,CAAb;;AAEAG,MAAAA,MAAM,CAACG,OAAP,GAAiB,UAAS/B,CAAT,EAAY;AAC5BW,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,QAAAA,OAAO,CAACqB,KAAR,CAAchC,CAAd;AACA,OAHD;;AAKA0B,MAAAA,KAAK,CAACO,UAAN,GAAmB,UAASjC,CAAT,EAAY;AAC9BW,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,OAFD;AAGA,KAnBD;AAqBC;;AAGHsB,EAAAA,MAAM,GAAG;AAIT,wBAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,eAIA;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAG,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,YAAnC;AAAgD,MAAA,KAAK,EAAC,EAAtD;AAAyD,MAAA,MAAM,EAAC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARA,eAYA;AAAQ,MAAA,OAAO,EAAE,KAAKrB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAZA,CAFE;AAuBD;;AA7FD;;AAiGA,eAAelB,IAAf","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Home extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postinfo: [],\r\n      urls: [],\r\n      img: null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  handlePicUpload = (e) => {\r\n  const value = e.target.value;\r\n\r\n  this.setState({img: e.target.files[0]});\r\n\r\n}\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    db = new IndexedDbRepository( 'id' );\r\n    console.log(db);\r\n\r\n    }\r\n\r\n\r\n    uploadpicture()\r\n    {\r\n      alert(\"a\");\r\n\r\n\r\n      uploadingPicture.date = new Date();\r\n\r\n\t\t\tlet file = this.state.img;\r\n\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\t\treader.readAsBinaryString(file);\r\n\r\n\t\t\t\treader.onload = function(e) {\r\n\t\t\t\t\t//alert(e.target.result);\r\n\t\t\t\t\tlet bits = e.target.result;\r\n        uploadingPicture.value = bits;\r\n\r\n\r\n\t\t\t\t\tlet ob = uploadingPicture;\r\n\r\n\t\t\t\t\tlet trans = db.transaction(['Pictures'], 'readwrite');\r\n\t\t\t\t\tlet addReq = trans.objectStore('Pictures').add(ob);\r\n\r\n\t\t\t\t\taddReq.onerror = function(e) {\r\n\t\t\t\t\t\tconsole.log('error storing data');\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttrans.oncomplete = function(e) {\r\n\t\t\t\t\t\tconsole.log('data stored');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Simple gallery pure css</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n</div>\r\n\r\n<div>\r\n    <input type=\"file\" name=\"image\" id=\"articleimg\" class=\"\" accept=\".png,.jpg\" />\r\n</div>\r\n\r\n<button onClick={this.uploadpicture}>  Активировать лазеры\r\n\r\n</button>\r\n\r\n\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}