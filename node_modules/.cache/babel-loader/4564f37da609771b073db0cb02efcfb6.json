{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\stats.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass Stats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      max: 0,\n      current: 0,\n      percent: 0,\n      totalammount: 0\n    };\n  }\n\n  componentDidMount() {\n    navigator.storage.estimate().then(estimate => {\n      this.setState({\n        max: estimate.quota / 1000000000\n      });\n      this.setState({\n        current: estimate.usage / 1000000000\n      });\n      console.log(this.state.max);\n      console.log(this.state.current);\n    });\n    this.dbtest = new IndexedDbRepository('Storage');\n    this.dbtest.countALL().then(number => this.setState({\n      totalammount: number\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }\n    }, \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0430\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }\n    }, \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \", this.state.max, \" GB (\\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u0442 \\u043E\\u0442 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430).\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }\n    }, \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \", this.state.current, \" GB.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }\n    }, \"\\u0412 \\u0431\\u0430\\u0437\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0441\\u044F \", this.state.totalammount, \" \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043E\\u043A.\")));\n  }\n\n}\n\nexport default Stats;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/stats.js"],"names":["React","IndexedDbRepository","Stats","Component","constructor","props","state","max","current","percent","totalammount","componentDidMount","navigator","storage","estimate","then","setState","quota","usage","console","log","dbtest","countALL","number","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,mBAAP,MAAgC,kBAAhC;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAEA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAKDC,EAAAA,iBAAiB,GAAG;AAGlBC,IAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAlB,GAA6BC,IAA7B,CAAmCD,QAAD,IAAc;AAC9C,WAAKE,QAAL,CAAc;AAACT,QAAAA,GAAG,EAAEO,QAAQ,CAACG,KAAT,GAAe;AAArB,OAAd;AACA,WAAKD,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEM,QAAQ,CAACI,KAAT,GAAe;AAAzB,OAAd;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,GAAvB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,OAAvB;AAED,KANC;AAQF,SAAKa,MAAL,GAAc,IAAIpB,mBAAJ,CAAyB,SAAzB,CAAd;AACA,SAAKoB,MAAL,CAAYC,QAAZ,GAAuBP,IAAvB,CAA6BQ,MAAM,IAAI,KAAKP,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAEa;AAAf,KAAd,CAAvC;AAEG;;AAIHC,EAAAA,MAAM,GAAG;AACT,wBAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAFA,eAGA;AAAK,MAAA,EAAE,EAAG,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAAmB,KAAKlB,KAAL,CAAWC,GAA9B,oHAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAAwB,KAAKD,KAAL,CAAWE,OAAnC,SAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAAoB,KAAKF,KAAL,CAAWI,YAA/B,uDAJA,CAHA,CAFE;AAeD;;AAhDD;;AAoDA,eAAeR,KAAf","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Stats extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      max: 0,\r\n      current: 0,\r\n      percent: 0,\r\n      totalammount: 0\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n\r\n    navigator.storage.estimate().then((estimate) => {\r\n      this.setState({max: estimate.quota/1000000000});\r\n      this.setState({current: estimate.usage/1000000000});\r\n    console.log(this.state.max);\r\n    console.log(this.state.current);\r\n\r\n  });\r\n\r\n  this.dbtest = new IndexedDbRepository( 'Storage' );\r\n  this.dbtest.countALL().then( number => this.setState({totalammount: number}) );\r\n\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Статистика хранилища</h1>\r\n<div id = \"maincontent\">\r\n\r\n<p>Всего доступно {this.state.max} GB (зависит от браузера).</p>\r\n<p>Сейчас используется {this.state.current} GB.</p>\r\n<p>В базе хранится {this.state.totalammount} картинок.</p>\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}