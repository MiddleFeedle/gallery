{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\addpicture.js\";\nimport React from 'react';\nimport './home.css';\nimport IndexedDbRepository from '../db/connection';\n\nclass AddPicture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePicUpload = e => {\n      alert(\"aa\");\n      const value = e.target.value;\n      var file = e.target.files[0];\n\n      if (file.type.split('/')[0] != 'image') {\n        this.state.image = false;\n        alert(\"Неправильный формат файла!!!\");\n      } else {\n        this.state.image = true;\n        this.uploadingPicture.type = file.type.split('/')[1];\n        var sizeInMB = (file.size / (1024 * 1024)).toFixed(2);\n        this.uploadingPicture.size = sizeInMB;\n\n        var _URL = window.URL || window.webkitURL;\n\n        var img;\n        img = new Image();\n\n        var objectUrl = _URL.createObjectURL(file);\n\n        img.src = objectUrl;\n\n        img.onload = function () {\n          this.uploadingPicture.width = this.width;\n          this.uploadingPicture.height = this.height;\n\n          if (this.height > this.width) {\n            this.uploadingPicture.format = \"portrait\";\n          } else if (this.width > this.height) {\n            this.uploadingPicture.format = \"album\";\n          } else {\n            this.uploadingPicture.format = \"square\";\n          }\n\n          _URL.revokeObjectURL(objectUrl);\n\n          console.log(this.uploadingPicture);\n          alert(\"aa\");\n        };\n      }\n    };\n\n    this.state = {\n      image: false,\n      urls: [],\n      img: null\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    this.handlePicUpload = this.handlePicUpload.bind(this);\n    var db, dbtest;\n    let uploadingPicture = {\n      name: null,\n      format: null,\n      width: null,\n      height: null,\n      size: null,\n      type: null,\n      date: null,\n      desc: \"test\",\n      tags: \"котики тест проверка\",\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    console.log(this.db);\n  }\n\n  uploadpicture() {\n    //  let uploadingPicture.date = new Date();\n    alert(this.dbtest);\n    let file = this.state.img;\n    alert(file);\n    var reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = e => {\n      let bits = e.target.result; // uploadingPicture.value = bits;\n\n      let ob = bits;\n      this.dbtest.save({\n        value: bits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"picture\",\n      type: \"file\",\n      accept: \"image/*\",\n      onchange: this.handlePicUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 1\n      }\n    }, \"  \\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043B\\u0430\\u0437\\u0435\\u0440\\u044B\"));\n  }\n\n}\n\nexport default AddPicture;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/addpicture.js"],"names":["React","IndexedDbRepository","AddPicture","Component","constructor","props","handlePicUpload","e","alert","value","target","file","files","type","split","state","image","uploadingPicture","sizeInMB","size","toFixed","_URL","window","URL","webkitURL","img","Image","objectUrl","createObjectURL","src","onload","width","height","format","revokeObjectURL","console","log","urls","uploadpicture","bind","db","dbtest","name","date","desc","tags","componentDidMount","reader","FileReader","readAsBinaryString","bits","result","ob","save","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass AddPicture extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: false,\r\n      urls: [],\r\n      img: null,\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n    this.handlePicUpload = this.handlePicUpload.bind(this);\r\n\r\n    var db, dbtest;\r\n\r\n    let uploadingPicture =\r\n{\r\n    name: null,\r\n    format: null,\r\n    width: null,\r\n    height: null,\r\n    size: null,\r\n    type: null,\r\n    date: null,\r\n    desc: \"test\",\r\n    tags: \"котики тест проверка\",\r\n    value: null\r\n}\r\n\r\n  }\r\n\r\n\r\n\r\n  handlePicUpload = (e) => {\r\n    alert(\"aa\");\r\n\r\n  const value = e.target.value;\r\n  var file = e.target.files[0];\r\n\r\n  if (file.type.split('/')[0] != 'image' )\r\n  {\r\n    this.state.image = false;\r\n    alert(\"Неправильный формат файла!!!\");\r\n  }\r\n\r\n  else {\r\n\r\n    this.state.image = true;\r\n\r\n  this.uploadingPicture.type = file.type.split('/')[1];\r\n\r\n  var sizeInMB = (file.size / (1024*1024)).toFixed(2);\r\n  this.uploadingPicture.size = sizeInMB;\r\n\r\n\r\n  var _URL = window.URL || window.webkitURL;\r\n\r\n  var img;\r\n  img = new Image();\r\n  var objectUrl = _URL.createObjectURL(file);\r\n  img.src = objectUrl;\r\n\r\n  img.onload = function () {\r\n      this.uploadingPicture.width = this.width;\r\n      this.uploadingPicture.height = this.height;\r\n\r\n      if(this.height > this.width)\r\n      {\r\n        this.uploadingPicture.format = \"portrait\";\r\n      }\r\n      else if(this.width > this.height)\r\n      {\r\n        this.uploadingPicture.format = \"album\";\r\n      }\r\n      else {this.uploadingPicture.format = \"square\"}\r\n      _URL.revokeObjectURL(objectUrl);\r\n      console.log(this.uploadingPicture);\r\n      alert(\"aa\");\r\n  };\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.dbtest = new IndexedDbRepository( 'Storage' );\r\n    console.log(this.db);\r\n    }\r\n\r\n\r\n    uploadpicture()\r\n    {\r\n    //  let uploadingPicture.date = new Date();\r\n\r\n    alert(this.dbtest);\r\n\r\n\t\t  \tlet file = this.state.img;\r\n        alert(file);\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\t\treader.readAsBinaryString(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tlet bits = e.target.result;\r\n        // uploadingPicture.value = bits;\r\n\r\n\r\n\t\t\t\t\tlet ob = bits;\r\n          this.dbtest.save( { value: bits } );\r\n\r\n\t\t\t\t}\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n  return(\r\n\r\n<div>\r\n\r\n<h1>Добавить картинку</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n    <label for=\"picture\">\r\n    <img src=\"https://icon-library.net/images/upload-photo-icon/upload-photo-icon-21.jpg\"/>\r\n    </label>\r\n\r\n<input id=\"picture\" type=\"file\" accept=\"image/*\" onchange={this.handlePicUpload} />\r\n  </div>\r\n\r\n</div>\r\n\r\n<div>\r\n</div>\r\n\r\n<button onClick={this.uploadpicture}>  Активировать лазеры\r\n\r\n</button>\r\n\r\n\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default AddPicture;\r\n"]},"metadata":{},"sourceType":"module"}