{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\middl\\\\Desktop\\\\DevIT project\\\\devit-project\\\\src\\\\pages\\\\edit.js\";\nimport React from 'react';\nimport './home.css';\nimport { Redirect } from 'react-router-dom';\nimport IndexedDbRepository from '../db/connection';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.renderRedirect = () => {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.state = {\n      name: null,\n      desc: null,\n      img: [],\n      tags: null,\n      image: []\n    };\n    this.uploadpicture = this.uploadpicture.bind(this);\n    var db, dbtest;\n    var uploadingPicture;\n  }\n\n  componentDidMount() {\n    this.dbtest = new IndexedDbRepository('Storage');\n    this.dbtest.findById(parseInt(this.props.match.params.PictureID)).then(picture => {\n      this.setState({\n        image: picture\n      });\n      this.setState({\n        name: picture.name\n      });\n      this.setState({\n        desc: picture.desc\n      });\n      this.setState({\n        tags: picture.tags\n      });\n    });\n  }\n\n  uploadpicture() {\n    if (this.state.name === null) {\n      alert(\"Введите название картинки!\");\n    } else {\n      let uploadingPicture = this.state.image;\n      uploadingPicture.name = this.state.name;\n      uploadingPicture.desc = this.state.desc;\n\n      if (this.state.tags !== null && this.state.tags !== \"\") {\n        this.state.tags = this.state.tags.replace(/\\s+/g, ' ').trim();\n\n        if (this.state.tags !== \"\") {\n          uploadingPicture.tags = this.state.tags.split(\" \");\n        }\n      }\n\n      this.dbtest.save(this.uploadingPicture).then(function (value) {\n        alert(\"Изображение отредактировано!!\");\n        window.location.href = \"/\" + this.state.picture.id;\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 1\n      }\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-all\",\n      id: \"maincontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadingpicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'data:image/' + this.state.image.type + ';base64,' + btoa(this.state.image.value),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }\n    }, \"Title\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438\",\n      value: this.state.name,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 1\n      }\n    }, \"Text\", /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"desc\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      value: this.state.desc,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.editpicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 1\n      }\n    }, \" \\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C! \")), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      height: \"300px\",\n      className: \"form-control bigtext\",\n      name: \"tags\",\n      placeholder: \"\\u0422\\u0435\\u0433\\u0438 (\\u0447\\u0435\\u0440\\u0435\\u0437 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B \\u0431\\u0435\\u0437 #) \\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u0442\\u0435\\u0433\\u0430 - \\u0442\\u0440\\u0438 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\",\n      value: this.state.tags,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 1\n      }\n    }));\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/pages/edit.js"],"names":["React","Redirect","IndexedDbRepository","Edit","Component","constructor","props","handleUserInput","e","name","target","value","setState","renderRedirect","state","desc","img","tags","image","uploadpicture","bind","db","dbtest","uploadingPicture","componentDidMount","findById","parseInt","match","params","PictureID","then","picture","alert","replace","trim","split","save","window","location","href","id","render","type","btoa","editpicture"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './home.css';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport IndexedDbRepository from '../db/connection';\r\n\r\n\r\nclass Edit extends React.Component\r\n\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      desc: null,\r\n      img: [],\r\n      tags: null,\r\n      image: []\r\n    };\r\n\r\n    this.uploadpicture = this.uploadpicture.bind(this);\r\n\r\n    var db, dbtest;\r\n    var uploadingPicture;\r\n  }\r\n\r\n\r\n\r\nhandleUserInput = (e) => {\r\n  const name = e.target.name;\r\n  const value = e.target.value;\r\n  this.setState({[name]: value});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n  this.dbtest = new IndexedDbRepository( 'Storage' );\r\n  this.dbtest.findById( parseInt(this.props.match.params.PictureID) ).then( picture => {\r\n    this.setState( { image: picture });\r\n    this.setState( { name: picture.name });\r\n    this.setState( { desc: picture.desc });\r\n    this.setState( { tags: picture.tags });\r\n}\r\n);\r\n\r\n    }\r\n\r\n    renderRedirect = () => {\r\n    return <Redirect to='/' />\r\n}\r\n\r\n\r\nuploadpicture()\r\n{\r\n\r\n    if(this.state.name === null) { alert(\"Введите название картинки!\");}\r\n    else{\r\n\r\n    let uploadingPicture = this.state.image;\r\n    uploadingPicture.name = this.state.name;\r\n    uploadingPicture.desc = this.state.desc;\r\n\r\n    if(this.state.tags !== null && this.state.tags !== \"\")\r\n    {\r\n      this.state.tags = this.state.tags.replace(/\\s+/g, ' ').trim();\r\n      if(this.state.tags !== \"\")\r\n      {\r\n      uploadingPicture.tags = this.state.tags.split(\" \");\r\n    }\r\n    }\r\n\r\n\r\n      this.dbtest.save( this.uploadingPicture ).then(function(value) {\r\n        alert(\"Изображение отредактировано!!\");\r\n        window.location.href = \"/\" + this.state.picture.id;\r\n          });\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n  return(\r\n<div>\r\n\r\n<h1>Редактировать</h1>\r\n\r\n<div className=\"container-all\" id = \"maincontent\">\r\n\r\n  <div className = \"uploadingpicture\">\r\n  <img src={'data:image/' + this.state.image.type +';base64,' + btoa(this.state.image.value)} alt='' />\r\n\r\n  </div>\r\n\r\n  <div>\r\n  Title\r\n  <input type=\"text\" required className=\"form-control\" name=\"name\"\r\n    placeholder=\"Название картинки\"\r\n    value={this.state.name}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<br />\r\n<div>\r\n  Text\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"desc\"\r\n    placeholder=\"Описание\"\r\n    value={this.state.desc}\r\n    onChange={this.handleUserInput}  />\r\n</div>\r\n<button onClick={this.editpicture}> Редактировать! </button>\r\n\r\n</div>\r\n\r\n  <textarea type=\"textarea\" height=\"300px\" className=\"form-control bigtext\" name=\"tags\"\r\n  placeholder=\"Теги (через пробел без #) Минимальная длина тега - три символа\"\r\n  value={this.state.tags}\r\n  onChange={this.handleUserInput}  />\r\n\r\n<div>\r\n\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}