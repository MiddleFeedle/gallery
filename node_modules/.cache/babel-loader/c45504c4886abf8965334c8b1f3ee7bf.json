{"ast":null,"code":"export default class IndexedDbRepository {\n  constructor(keyPath) {\n    let db;\n    let dbVersion = 1;\n    let dbReady = false;\n  }\n\n  initDb() {\n    let request = indexedDB.open('TestCollection', dbVersion);\n    console.log(request);\n\n    request.onerror = function (e) {\n      console.error('Unable to open database.');\n    };\n\n    request.onsuccess = function (e) {\n      db = e.target.result;\n      console.log(db);\n      console.log('db opened ' + db.name);\n    };\n\n    request.onupgradeneeded = function (e) {\n      let db = e.target.result;\n      console.log(db);\n      var objectStore = db.createObjectStore('Pictures', {\n        keyPath: 'id',\n        autoIncrement: true\n      });\n      objectStore.createIndex(\"format\", \"format\", {\n        unique: false\n      });\n      objectStore.createIndex(\"height\", \"height\", {\n        unique: false\n      });\n      objectStore.createIndex(\"size\", \"size\", {\n        unique: false\n      });\n      objectStore.createIndex(\"type\", \"type\", {\n        unique: false\n      });\n      objectStore.createIndex(\"date\", \"date\", {\n        unique: false\n      });\n      objectStore.createIndex(\"desc\", \"desc\", {\n        unique: false\n      });\n      objectStore.createIndex(\"tags\", \"tags\", {\n        unique: false\n      });\n      objectStore.createIndex(\"value\", \"value\", {\n        unique: false\n      });\n      dbReady = true;\n    };\n\n    return db;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/middl/Desktop/DevIT project/devit-project/src/db/connection.js"],"names":["IndexedDbRepository","constructor","keyPath","db","dbVersion","dbReady","initDb","request","indexedDB","open","console","log","onerror","e","error","onsuccess","target","result","name","onupgradeneeded","objectStore","createObjectStore","autoIncrement","createIndex","unique"],"mappings":"AACA,eAAe,MAAMA,mBAAN,CAA0B;AACvCC,EAAAA,WAAW,CAAEC,OAAF,EAAqB;AAC9B,QAAIC,EAAJ;AACE,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,OAAO,GAAG,KAAd;AACH;;AAEAC,EAAAA,MAAM,GAAG;AAER,QAAIC,OAAO,GAAGC,SAAS,CAACC,IAAV,CAAe,gBAAf,EAAiCL,SAAjC,CAAd;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAEAA,IAAAA,OAAO,CAACK,OAAR,GAAkB,UAASC,CAAT,EAAY;AAC5BH,MAAAA,OAAO,CAACI,KAAR,CAAc,0BAAd;AACD,KAFD;;AAIAP,IAAAA,OAAO,CAACQ,SAAR,GAAoB,UAASF,CAAT,EAAY;AAC9BV,MAAAA,EAAE,GAAGU,CAAC,CAACG,MAAF,CAASC,MAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeR,EAAE,CAACe,IAA9B;AACD,KAJD;;AAMAX,IAAAA,OAAO,CAACY,eAAR,GAA0B,UAASN,CAAT,EAAY;AAChC,UAAIV,EAAE,GAAGU,CAAC,CAACG,MAAF,CAASC,MAAlB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AAEA,UAAIiB,WAAW,GAAGjB,EAAE,CAACkB,iBAAH,CAAqB,UAArB,EAAiC;AAACnB,QAAAA,OAAO,EAAC,IAAT;AAAeoB,QAAAA,aAAa,EAAE;AAA9B,OAAjC,CAAlB;AAEAF,MAAAA,WAAW,CAACG,WAAZ,CAAwB,QAAxB,EAAkC,QAAlC,EAA4C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA5C;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,QAAxB,EAAkC,QAAlC,EAA4C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA5C;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,EAAwC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxC;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,EAAwC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxC;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,EAAwC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxC;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,EAAwC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxC;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,EAAwC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxC;AACAJ,MAAAA,WAAW,CAACG,WAAZ,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA1C;AACAnB,MAAAA,OAAO,GAAG,IAAV;AACD,KAfL;;AAgBI,WAAOF,EAAP;AACD;;AAxCkC","sourcesContent":["\r\nexport default class IndexedDbRepository {\r\n  constructor( keyPath : string ) {\r\n    let db;\r\n      let dbVersion = 1;\r\n      let dbReady = false;\r\n  }\r\n\r\n   initDb() {\r\n\r\n    let request = indexedDB.open('TestCollection', dbVersion);\r\n\r\n    console.log(request);\r\n\r\n    request.onerror = function(e) {\r\n      console.error('Unable to open database.');\r\n    }\r\n\r\n    request.onsuccess = function(e) {\r\n      db = e.target.result;\r\n      console.log(db);\r\n      console.log('db opened ' + db.name);\r\n    }\r\n\r\n    request.onupgradeneeded = function(e) {\r\n          let db = e.target.result;\r\n          console.log(db);\r\n\r\n          var objectStore = db.createObjectStore('Pictures', {keyPath:'id', autoIncrement: true});\r\n\r\n          objectStore.createIndex(\"format\", \"format\", { unique: false });\r\n          objectStore.createIndex(\"height\", \"height\", { unique: false });\r\n          objectStore.createIndex(\"size\", \"size\", { unique: false });\r\n          objectStore.createIndex(\"type\", \"type\", { unique: false });\r\n          objectStore.createIndex(\"date\", \"date\", { unique: false });\r\n          objectStore.createIndex(\"desc\", \"desc\", { unique: false });\r\n          objectStore.createIndex(\"tags\", \"tags\", { unique: false });\r\n          objectStore.createIndex(\"value\", \"value\", { unique: false });\r\n          dbReady = true;\r\n        }\r\n        return db;\r\n      }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}